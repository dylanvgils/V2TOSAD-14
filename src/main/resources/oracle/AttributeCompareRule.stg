templateTriggerBeforeRow(table, name, column, operator, min, max, error_code, error) ::=<<
create or replace hiermoetapplicatiekomen_<table>_CNS_ARNG
before insert on <table>
for each row
  DECLARE
    c_exception EXCEPTION;
    l_passed boolean := false;
begin
  if not(:new.<column> <operator> <max>) THEN
    RAISE c_exception;
  END IF;


  EXCEPTION
  WHEN c_exception THEN
    RAISE_APPLICATION_ERROR (<error_code>, '<error>');

end;
>>
templateTriggerAfterStatement(table, name, column, operator, min, max, error_code, error) ::=<<
create or replace hiermoetapplicatiekomen_<table>_CNS_ARNG
after insert on <table>
  DECLARE
    c_exception EXCEPTION;
    l_passed boolean := false;
begin
  if not(:new.<column> <operator> <max>) THEN
    RAISE c_exception;
  END IF;


  EXCEPTION
  WHEN c_exception THEN
    RAISE_APPLICATION_ERROR (<error_code>, '<error>');

end;
>>
templateTriggerBeforeStatement(table, name, column, operator, min, max, error_code, error) ::=<<
create or replace hiermoetapplicatiekomen_<table>_CNS_ARNG
before insert on <table>
  DECLARE
    c_exception EXCEPTION;
    l_passed boolean := false;
begin
  if not(:new.<column> <operator> <max>) THEN
    RAISE c_exception;
  END IF;


  EXCEPTION
  WHEN c_exception THEN
    RAISE_APPLICATION_ERROR (<error_code>, '<error>');

end;
>>